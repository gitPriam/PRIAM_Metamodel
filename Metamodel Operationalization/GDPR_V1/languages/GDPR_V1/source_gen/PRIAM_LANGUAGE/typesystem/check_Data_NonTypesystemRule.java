package PRIAM_LANGUAGE.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class check_Data_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_Data_NonTypesystemRule() {
  }
  public void applyRule(final SNode data, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SPropertyOperations.getBoolean(data, PROPS.isPersonal$gtJN)) {
      if (SPropertyOperations.getEnum(data, PROPS.source$gzQd).toString().equals("Direct")) {
        if (SPropertyOperations.getBoolean(data, PROPS.isPortable$g$kf) == false) {
          {
            final MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(data, "Each 'direct' source data has the value 'true' in the isPortable attribute", "r:2adcd0b5-6265-4462-b7b6-92dedd477e2c(PRIAM_LANGUAGE.typesystem)", "5156672680757754063", null, errorTarget);
          }
        }

      }
      if (SPropertyOperations.getEnum(data, PROPS.source$gzQd).toString().equals("Generated")) {
        if (SPropertyOperations.getBoolean(data, PROPS.isPortable$g$kf) == true) {
          {
            final MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(data, "Any Generated source data cannot be portable", "r:2adcd0b5-6265-4462-b7b6-92dedd477e2c(PRIAM_LANGUAGE.typesystem)", "5156672680757756469", null, errorTarget);
          }
        }
      }

      if (SPropertyOperations.getEnum(data, PROPS.source$gzQd).toString().equals("Indirect")) {
        if (isEmptyString(SPropertyOperations.getString(data, PROPS.sourceDetails$g$5e))) {
          {
            final MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(data, "Specify the source of your data", "r:2adcd0b5-6265-4462-b7b6-92dedd477e2c(PRIAM_LANGUAGE.typesystem)", "3562240872162217535", null, errorTarget);
          }
        }
      }

      if ((SLinkOperations.getTarget(data, LINKS.personalDataCategory$gF7G) == null)) {
        {
          final MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(data, "You must define the category", "r:2adcd0b5-6265-4462-b7b6-92dedd477e2c(PRIAM_LANGUAGE.typesystem)", "3562240872166939950", null, errorTarget);
        }
      }
      if ((SLinkOperations.getTarget(data, LINKS.dataSubjectCategory$gFmH) == null)) {
        {
          final MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(data, "You must define the data subject category to which the data belongs", "r:2adcd0b5-6265-4462-b7b6-92dedd477e2c(PRIAM_LANGUAGE.typesystem)", "3562240872166947852", null, errorTarget);
        }
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Data$W_;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static boolean isEmptyString(String str) {
    return str == null || str.isEmpty();
  }

  private static final class PROPS {
    /*package*/ static final SProperty isPersonal$gtJN = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce7779L, "isPersonal");
    /*package*/ static final SProperty isPortable$g$kf = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce7780L, "isPortable");
    /*package*/ static final SProperty source$gzQd = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce777eL, "source");
    /*package*/ static final SProperty sourceDetails$g$5e = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce777fL, "sourceDetails");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink personalDataCategory$gF7G = MetaAdapterFactory.getReferenceLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce7788L, "personalDataCategory");
    /*package*/ static final SReferenceLink dataSubjectCategory$gFmH = MetaAdapterFactory.getReferenceLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x1f97ffaeb2ce7789L, "dataSubjectCategory");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Data$W_ = MetaAdapterFactory.getConcept(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, "PRIAM_LANGUAGE.structure.Data");
  }
}
