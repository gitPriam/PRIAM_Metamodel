package PRIAM_LANGUAGE.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Actor = 0;
  public static final int ActorAnnotation = 1;
  public static final int Address = 2;
  public static final int Breach = 3;
  public static final int Consent = 4;
  public static final int Consequence = 5;
  public static final int Contract = 6;
  public static final int Country = 7;
  public static final int DPO = 8;
  public static final int Data = 9;
  public static final int DataAnnotation = 10;
  public static final int DataAnswer = 11;
  public static final int DataRef = 12;
  public static final int DataRequest = 13;
  public static final int DataRequestAnswer = 14;
  public static final int DataSubject = 15;
  public static final int DataSubjectCategory = 16;
  public static final int DataSubjectRef = 17;
  public static final int DataType = 18;
  public static final int DataUsage = 19;
  public static final int ListCountry = 20;
  public static final int ListPersonalDataCategory = 21;
  public static final int MainActor = 22;
  public static final int MainActorRef = 23;
  public static final int Measure = 24;
  public static final int MeasureRef = 25;
  public static final int NonPersonalData = 26;
  public static final int PRIAM_DB = 27;
  public static final int PersonalData = 28;
  public static final int PersonalDataCategory = 29;
  public static final int PersonalDataTransfer = 30;
  public static final int Processing = 31;
  public static final int ProcessingAnnotation = 32;
  public static final int ProcessingLink = 33;
  public static final int ProcessingRef = 34;
  public static final int ProcessingRequest = 35;
  public static final int Provider = 36;
  public static final int Purpose = 37;
  public static final int Representative = 38;
  public static final int Request = 39;
  public static final int Requirements = 40;
  public static final int SecondaryActor = 41;
  public static final int SecondaryActorCategory = 42;
  public static final int SecondaryActorRef = 43;
  public static final int Tutor = 44;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL);
    builder.put(0x30f0048592d2bda8L, Actor);
    builder.put(0x2a509229fff4521eL, ActorAnnotation);
    builder.put(0x2a509229fff451b6L, Address);
    builder.put(0xcb1117472736f9cL, Breach);
    builder.put(0x5ed7b73b7b411215L, Consent);
    builder.put(0xcb111747274a413L, Consequence);
    builder.put(0x5ed7b73b7b4089d2L, Contract);
    builder.put(0x5e5ebbabb1377b5dL, Country);
    builder.put(0x5e5ebbabb1377b6fL, DPO);
    builder.put(0x5ed7b73b7b411269L, Data);
    builder.put(0x3af6325cd45a5aa2L, DataAnnotation);
    builder.put(0x13b7d324448cf27aL, DataAnswer);
    builder.put(0x7e195c253bb9471dL, DataRef);
    builder.put(0x40844459bb3c96e9L, DataRequest);
    builder.put(0x3f0ad7c4153e7cfeL, DataRequestAnswer);
    builder.put(0x30f0048592d2bdabL, DataSubject);
    builder.put(0x507d8789e725b2fdL, DataSubjectCategory);
    builder.put(0x1f97ffaeb30c0a81L, DataSubjectRef);
    builder.put(0x5309b4b3bd5290L, DataType);
    builder.put(0x5ed7b73b7b411277L, DataUsage);
    builder.put(0x4e6350a8b6cd4c08L, ListCountry);
    builder.put(0x6224fff6288f34a8L, ListPersonalDataCategory);
    builder.put(0x30f0048592d2bda9L, MainActor);
    builder.put(0x1f97ffaeb3031cc1L, MainActorRef);
    builder.put(0x5e5ebbabb1377b9fL, Measure);
    builder.put(0x60f68a1f3f26e7c5L, MeasureRef);
    builder.put(0x2615d150e803c810L, NonPersonalData);
    builder.put(0x824129b34920bc3L, PRIAM_DB);
    builder.put(0x9b6693a01c08cc8L, PersonalData);
    builder.put(0x6224fff6288f34a4L, PersonalDataCategory);
    builder.put(0x7e195c253bae1d4fL, PersonalDataTransfer);
    builder.put(0x5ed7b73b7b411242L, Processing);
    builder.put(0x500664cd9d79c21fL, ProcessingAnnotation);
    builder.put(0x1f97ffaeb2db8958L, ProcessingLink);
    builder.put(0x26e217bc0d00c73dL, ProcessingRef);
    builder.put(0x40844459bb3c96ecL, ProcessingRequest);
    builder.put(0x30f0048592d2bdacL, Provider);
    builder.put(0x5ed7b73b7b411d71L, Purpose);
    builder.put(0x2a509229fff45205L, Representative);
    builder.put(0x40844459bb3c96d3L, Request);
    builder.put(0x2661cc24bc0aafbfL, Requirements);
    builder.put(0x30f0048592d2bdaaL, SecondaryActor);
    builder.put(0x5e5ebbabb1377b7cL, SecondaryActorCategory);
    builder.put(0x7e195c253bbd8ccaL, SecondaryActorRef);
    builder.put(0x30f0048592d2bdadL, Tutor);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
