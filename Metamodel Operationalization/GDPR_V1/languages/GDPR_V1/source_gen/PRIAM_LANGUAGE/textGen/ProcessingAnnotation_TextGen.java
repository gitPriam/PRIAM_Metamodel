package PRIAM_LANGUAGE.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class ProcessingAnnotation_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("/* insert measures */");
    tgs.newLine();
    for (SNode m : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.measures$x3gb))) {
      tgs.append("insert into measure (measure_id, measure_description, measure_type, measure_category) values (");
      tgs.append(SPropertyOperations.getInteger(m, PROPS.measureId$dVuQ) + "");
      tgs.append(", '");
      tgs.append(SPropertyOperations.getString(m, PROPS.description$dVWS));
      tgs.append("', '");
      tgs.append(SPropertyOperations.getEnum(m, PROPS.measureType$c7bn).getName());
      tgs.append("', '");
      tgs.append(SPropertyOperations.getEnum(m, PROPS.measureCategory$cd2K).getName());
      tgs.append("');");
      tgs.newLine();
      tgs.newLine();

    }
    for (SNode p : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.processing$XRQF))) {
      tgs.append("/* insert processing ");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("*/");
      tgs.newLine();
      tgs.append("insert into processing (processing_id, processing_name, processing_type, processing_category, created_at, modified_at, endeded_at) values (");
      tgs.append(SPropertyOperations.getInteger(p, PROPS.processingId$d2f) + "");
      tgs.append(", '");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("', '");
      tgs.append(SPropertyOperations.getEnum(p, PROPS.pt$RPDf).getName());
      tgs.append("', '");
      tgs.append(SPropertyOperations.getEnum(p, PROPS.pc$RQ7h).getName());
      tgs.append("', \"\",\"\",\"\"");
      tgs.append(");");
      tgs.newLine();
      tgs.newLine();

      tgs.append("/* insert purposes of processing: ");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("*/");
      tgs.newLine();
      for (SNode e : ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.purposes$76q7))) {
        tgs.append("insert into Purpose (purpose_id, purpose_description, purpose_type, processing_id) values('");
        tgs.append(SPropertyOperations.getInteger(e, PROPS.purposeId$WXGG) + "");
        tgs.append(", '");
        tgs.append(SPropertyOperations.getString(e, PROPS.description$5VPQ));
        tgs.append("', '");
        tgs.append(SPropertyOperations.getEnum(e, PROPS.type$5WjS).getName());
        tgs.append("',");
        tgs.append(SPropertyOperations.getInteger(p, PROPS.processingId$d2f) + "");
        tgs.append(");");
        tgs.newLine();
      }
      tgs.newLine();

      tgs.append("/* insert data used by processing: ");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("*/");
      tgs.newLine();
      for (SNode d : ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.dataUsage$IYyr))) {

        tgs.append("insert into DataUsage (data_usage_id, personal_status, c, r, u, d, data_id, processing_id ) values (");
        tgs.append(SPropertyOperations.getInteger(d, PROPS.dataUsageId$IE5E) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getBoolean(d, PROPS.hasPersonalUsage$NmBj) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getBoolean(d, PROPS.c$Nn5l) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getBoolean(d, PROPS.r$NnMo) + "");
        tgs.append(",");
        tgs.append(SPropertyOperations.getBoolean(d, PROPS.u$ZPfh) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getBoolean(d, PROPS.d$ZQqm) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getInteger(SLinkOperations.getTarget(d, LINKS.data$IQYy), PROPS.dataId$6Yum) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getInteger(p, PROPS.processingId$d2f) + "");
        tgs.append(");");
        tgs.newLine();
      }
      tgs.newLine();

      tgs.append("/* insert link(s) of processing: ");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("*/");
      tgs.newLine();
      if (ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.processingLink$pvkZ)).isNotEmpty()) {
        for (SNode l : ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.processingLink$pvkZ))) {
          // Non personal data
          tgs.append("insert into ProcessingLink (processing1, processing2, type_of_link ) values (");
          tgs.append(SPropertyOperations.getInteger(p, PROPS.processingId$d2f) + "");
          tgs.append(", ");
          tgs.append(SPropertyOperations.getInteger(SLinkOperations.getTarget(l, LINKS.processing$u170), PROPS.processingId$d2f) + "");
          tgs.append(", '");
          tgs.append(SPropertyOperations.getEnum(l, PROPS.typeOfLink$8yMm).getName());
          tgs.append("');");
          tgs.newLine();
        }
      }
      tgs.newLine();
      tgs.append("/* insert measure(s) of processing: ");
      tgs.append(SPropertyOperations.getString(p, PROPS.name$MnvL));
      tgs.append("*/");
      tgs.newLine();
      for (SNode pm : ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.measures$8ij8))) {
        // Non personal data
        tgs.append("insert into Processing_Measure (measure_id, processing_id) values (");
        tgs.append(SPropertyOperations.getInteger(SLinkOperations.getTarget(pm, LINKS.measureRef$FU9Q), PROPS.measureId$dVuQ) + "");
        tgs.append(", ");
        tgs.append(SPropertyOperations.getInteger(p, PROPS.processingId$d2f) + "");
        tgs.append("');");
        tgs.newLine();
      }

    }


  }

  private static final class PROPS {
    /*package*/ static final SProperty measureId$dVuQ = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5e5ebbabb1377b9fL, 0x5e5ebbabb1377ba0L, "measureId");
    /*package*/ static final SProperty description$dVWS = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5e5ebbabb1377b9fL, 0x5e5ebbabb1377ba2L, "description");
    /*package*/ static final SProperty measureType$c7bn = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5e5ebbabb1377b9fL, 0x3d13017cc9130fbcL, "measureType");
    /*package*/ static final SProperty measureCategory$cd2K = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5e5ebbabb1377b9fL, 0x3d13017cc9130fc0L, "measureCategory");
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty processingId$d2f = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x74fd0aaeb0fbe2baL, "processingId");
    /*package*/ static final SProperty pt$RPDf = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x5ed7b73b7b411247L, "pt");
    /*package*/ static final SProperty pc$RQ7h = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x5ed7b73b7b411249L, "pc");
    /*package*/ static final SProperty purposeId$WXGG = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411d71L, 0x1f97ffaeb2d717afL, "purposeId");
    /*package*/ static final SProperty description$5VPQ = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411d71L, 0x5ed7b73b7b411d72L, "description");
    /*package*/ static final SProperty type$5WjS = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411d71L, 0x5ed7b73b7b411d74L, "type");
    /*package*/ static final SProperty dataUsageId$IE5E = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x13b7d324448cf270L, "dataUsageId");
    /*package*/ static final SProperty hasPersonalUsage$NmBj = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x5ed7b73b7b4117c9L, "hasPersonalUsage");
    /*package*/ static final SProperty c$Nn5l = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x5ed7b73b7b4117cbL, "c");
    /*package*/ static final SProperty r$NnMo = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x5ed7b73b7b4117ceL, "r");
    /*package*/ static final SProperty u$ZPfh = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x5ed7b73b7b4117d2L, "u");
    /*package*/ static final SProperty d$ZQqm = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x5ed7b73b7b4117d7L, "d");
    /*package*/ static final SProperty dataId$6Yum = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411269L, 0x3f0ad7c4155b8e68L, "dataId");
    /*package*/ static final SProperty typeOfLink$8yMm = MetaAdapterFactory.getProperty(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x1f97ffaeb2db8958L, 0x1f97ffaeb2db8959L, "typeOfLink");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink measures$x3gb = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x500664cd9d79c21fL, 0x3c40a36f20df10c4L, "measures");
    /*package*/ static final SContainmentLink purposes$76q7 = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x5ed7b73b7b4129b5L, "purposes");
    /*package*/ static final SReferenceLink data$IQYy = MetaAdapterFactory.getReferenceLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411277L, 0x3c40a36f21039df9L, "data");
    /*package*/ static final SContainmentLink dataUsage$IYyr = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x3c40a36f21039e0aL, "dataUsage");
    /*package*/ static final SReferenceLink processing$u170 = MetaAdapterFactory.getReferenceLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x1f97ffaeb2db8958L, 0x1f97ffaeb2feb15eL, "processing");
    /*package*/ static final SContainmentLink processingLink$pvkZ = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x1f97ffaeb2f18095L, "processingLink");
    /*package*/ static final SReferenceLink measureRef$FU9Q = MetaAdapterFactory.getReferenceLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x60f68a1f3f26e7c5L, 0x60f68a1f3f26e7c6L, "measureRef");
    /*package*/ static final SContainmentLink measures$8ij8 = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x5ed7b73b7b411242L, 0x60f68a1f3f26e7c8L, "measures");
    /*package*/ static final SContainmentLink processing$XRQF = MetaAdapterFactory.getContainmentLink(0xe02dfeab630f4f6dL, 0x86a8a0833a3f70fcL, 0x500664cd9d79c21fL, 0x500664cd9d79c220L, "processing");
  }
}
